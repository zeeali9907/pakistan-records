<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Pakistan — Progress & Records (3D)</title>
  <style>
    body { margin: 0; overflow: hidden; font-family: Arial, sans-serif; }
    #overlay {
      position: absolute; top: 0; left: 0; width: 100%; height: 100%;
      background: rgba(0,0,0,0.4); color: white; padding: 20px; overflow-y: auto;
    }
    h1 { text-align: center; }
    .card {
      background: rgba(255,255,255,0.1);
      padding: 12px; margin: 10px auto; border-radius: 12px;
      width: 80%; backdrop-filter: blur(6px);
      transform: perspective(600px) rotateY(0deg);
      transition: transform 0.3s;
    }
    .card:hover { transform: perspective(600px) rotateY(8deg); }
  </style>
</head>
<body>
  <!-- 3D background -->
  <canvas id="bg"></canvas>

  <!-- Overlay for content -->
  <div id="overlay">
    <h1>پاکستان — ترقی اور عالمی ریکارڈز</h1>
    <div class="card">
      <h3>1998 — Nuclear Tests (Chagai-I & II)</h3>
      <p>Pakistan became the 7th nuclear power in the world.</p>
    </div>
    <div class="card">
      <h3>2014 — Malala Nobel Peace Prize</h3>
      <p>Malala Yousafzai became the youngest Nobel laureate.</p>
    </div>
  </div>

  <!-- Three.js -->
  <script src="https://cdn.jsdelivr.net/npm/three@0.152.2/build/three.min.js"></script>
  <script>
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({canvas: document.getElementById("bg")});
    renderer.setSize(window.innerWidth, window.innerHeight);

    // Create a 3D globe (sphere)
    const geometry = new THREE.SphereGeometry(5, 32, 32);
    const texture = new THREE.TextureLoader().load("https://threejs.org/examples/textures/earth_atmos_2048.jpg");
    const material = new THREE.MeshBasicMaterial({ map: texture });
    const globe = new THREE.Mesh(geometry, material);
    scene.add(globe);

    camera.position.z = 10;

    function animate() {
      requestAnimationFrame(animate);
      globe.rotation.y += 0.002; // rotate globe
      renderer.render(scene, camera);
    }
    animate();

    // Resize handling
    window.addEventListener("resize", () => {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(window.innerWidth, window.innerHeight);
    });
  </script>
</body>
</html>
